<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://docbook.org/xml/5.1/rng/docbook.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<?xml-model href="http://docbook.org/xml/5.1/sch/docbook.sch" type="application/xml" schematypens="http://purl.oclc.org/dsdl/schematron"?>
<chapter xmlns="http://docbook.org/ns/docbook"
    xmlns:xlink="http://www.w3.org/1999/xlink" version="5.1">
    <title>Description Logic: Definitional Operators</title>
    <para>Below is an overview of common DL syntax and properties seen in the medical domain, and
        major design considerations for Solor. </para>
    <section xml:id="section_8c35c127-885e-4150-b5e2-61a8b52781ae">
        <title>Conjunction &#x2227;</title>
        <para>Example: A &#x2227; B (A and B)</para>
        <para>"A and B" is true only if A is true and B is true. This syntax is also known as intersection.</para>
    </section>
    <section xml:id="section_0dbbbabf-43d9-4c54-bb3b-a2486ead3066">
        <title>Disjointness &#x2228;</title>
        <para>Example: A &#x2228; B (A or B)</para>
        <para>"A or B" is true if A is true, or if B is true, or if both A and B are true. This syntax is also known as union.</para>
    </section>
    <section xml:id="section_e8b2a42a-7161-4f40-bc25-c7ba0811177e">
        <title>Reflexive roles</title>
        <para>Every element is related to itself. For example, X = X</para>
    </section>
    <section xml:id="section_196f1d52-7e7e-49f6-9cf6-d41e0d2d8922">
        <title>Role inclusions &#x2282;</title>
        <para>Example: A &#x2282; B (all A are B)</para>
        <para>Role inclusions allow expression of role hierarchies, transitive roles and
            right identities.</para>
    </section>
    <section xml:id="section_da6bb31b-f469-4672-adbd-f3a3f0260f9c">
        <title>Necessary axioms</title>
        <para>Condition A is said to be necessary for Condition B, if falsity of A
            guarantees the falsity of B. </para>
        <para>In other words, if A then B: B is necessary for A because A cannot be true
            unless B is true. </para>
        <para> Example: <itemizedlist>
                <listitem>
                    <para>A = Human being is alive</para>
                </listitem>
                <listitem>
                    <para>B = Air is necessary for human being to breathe</para>
                </listitem>
                <listitem>
                    <para>If "Human being is alive", then "human being has air to
                        breathe" </para>
                </listitem>
        </itemizedlist></para>
    </section>
    <section xml:id="section_3bb1da79-8716-4162-8438-ab1c2a157e51">
        <title>Sufficient axioms</title>
        <para>Condition A is sufficient for Condition B, if and only if truth of A
            guarantees the truth of B. </para>
        <para>Continuing with the 'necessary' example, air by itself does not guarantee a
            human being is alive since other factors are required, such as water. In other
            words, there are several conditions that are required for a human being to be
            alive, and a sufficient set of these conditions must be present in order for a
            human being to be alive. </para>
    </section>
    <section xml:id="section_9a15e626-7aa5-49b3-af6d-acd39143393d">
        <title>Defining relationships</title>
        <para>Role relationships are represented as existential restrictions. These are used
            to logically represent a concept by establishing a relationship with other
            concepts. This will be further elaborated in the
            <?oxy_comment_start author="steph" timestamp="20190306T100949-0700" comment="Insert &quot;the&quot; here, before &quot;Solor&quot;." id="s4x_vqc_1hb" flag="done" mid="3"?><?oxy_comment_start author="erhwang" timestamp="20190307T083955-0700" comment="fixed" parentID="s4x_vqc_1hb" flag="done"?>Solor<?oxy_comment_end?><?oxy_comment_end mid="3"?>
            Definitional Knowledge chapter of the Definitional section.</para>
    </section>
    <section xml:id="section_898d51d6-ab3a-4d63-8922-2c64d1dc3beb">
        <title>Quantities</title>
        <para>Concrete domains are a construct that can define new classes by specifying
            restrictions on attributes that have literal values (as opposed to relationships
            to other concepts). The binary operators, equal to, greater than, greater than
            or equal to, less than, and less than or equal to, can be used in concrete
            domain expressions, and literal values can be integers, floating point numbers,
            string literals, and dates. <footnote>
                <para>SNOROCKET 2.0 Concurrent Domains and Concurrent Classification</para>
            </footnote></para>
        <para>Concrete domains are used to model quantities in the definition of concepts,
            such as defining how much ibuprofen may be in a medication tablet. This is
            further examined in the Topics of Concern chapter of the Definitional
            Section.</para>
    </section>
    <section>
        <title>EL++</title>
        <para>Since Solor is based on SNOMED, and SNOMED utilizes a subset of EL++, a brief
            introduction to this topic appears to be necessary. </para>
        <para>According to <link xlink:href="https://www.w3.org/2007/OWL/wiki/EL">w3.org</link><footnote>
                <para>https://www.w3.org/2007/OWL/wiki/EL</para>
        </footnote>, EL++ is a lightweight description logic that admits sound and complete
            reasoning in polytime. It is a syntactic fragment of OWL 1.1 DL. In particular, it
            shares the semantics of OWL 1.1 DL. The design goals behind EL++ were two-fold: <itemizedlist>
                <listitem>
                    <para>capture the expressive power that is used by large-scale ontologies
                        from practical applications</para>
                </listitem>
                <listitem>
                    <para>have polytime reasoning problems, in particular classification and
                        instance checking</para>
                </listitem>
            </itemizedlist></para>
        <para>As of 2011<footnote>
                <para>https://en.wikipedia.org/wiki/SNOMED_CT</para>
        </footnote>, SNOMED CT content limits itself to a subset of the EL++ formalism,
            restricting itself to the following operators: <itemizedlist>
                <listitem>
                    <para>Top, bottom</para>
                </listitem>
                <listitem>
                    <para>Primitive roles and concepts with asserted parent(s) for each</para>
                </listitem>
                <listitem>
                    <para>Concept definition and conjunction but NOT disjunction or
                        representation of
                        <?oxy_comment_start author="steph" timestamp="20190306T102859-0700" comment="Should this be changed to representation of absence?" id="ghz_drc_1hb" flag="done"?><?oxy_comment_start author="erhwang" timestamp="20190307T084216-0700" comment="fixed" parentID="ghz_drc_1hb" flag="done" mid="3"?>absence<?oxy_comment_end mid="3"?><?oxy_comment_end?></para>
                </listitem>
                <listitem>
                    <para>Role hierarchy but not role composition Domain and range
                        constraints</para>
                </listitem>
                <listitem>
                    <para>Existential but not universal restriction</para>
                </listitem>
                <listitem>
                    <para>A restricted form of role inclusion axiom (xRy ^ ySz => xRz)</para>
                </listitem>
                <listitem>
                    <para>The logic will be extended in the near future to include General
                        Concept Inclusion Axioms</para>
                </listitem>
            </itemizedlist></para>
    </section> 
</chapter>
